using  System;
using  System.Collections.Generic;
using  System.Linq.Expressions;
using  System.Web;
using  Umbraco.Core.Models;
using  Umbraco.Core.Models.PublishedContent;
using  Umbraco.Web;
using  Umbraco.ModelsBuilder;
using  Umbraco.ModelsBuilder.Umbraco;
[assembly: PureLiveAssembly]
[assembly:ModelsBuilderAssembly(PureLive = true, SourceHash = "554ad2e8e78380e6")]
[assembly:System.Reflection.AssemblyVersion("0.0.0.6")]


// FILE: models.generated.cs

//------------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by a tool.
//
//    Umbraco.ModelsBuilder v3.0.8.100
//
//   Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------















namespace Umbraco.Web.PublishedContentModels
{
	/// <summary>Home</summary>
	[PublishedContentModel("home")]
	public partial class Home : PublishedContentModel, IHomeControls
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "home";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Home(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Home, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Sponsors: Enter the sponsors for the meetup
		///</summary>
		[ImplementPropertyType("sponsors")]
		public IEnumerable<IPublishedContent> Sponsors
		{
			get { return this.GetPropertyValue<IEnumerable<IPublishedContent>>("sponsors"); }
		}

		///<summary>
		/// Address: Enter the address for the meetup
		///</summary>
		[ImplementPropertyType("address")]
		public string Address
		{
			get { return Umbraco.Web.PublishedContentModels.HomeControls.GetAddress(this); }
		}

		///<summary>
		/// Next Event Time: Enter the time for the next event
		///</summary>
		[ImplementPropertyType("nextEventTime")]
		public string NextEventTime
		{
			get { return Umbraco.Web.PublishedContentModels.HomeControls.GetNextEventTime(this); }
		}

		///<summary>
		/// Next Event Title: Enter the title for the next event
		///</summary>
		[ImplementPropertyType("nextEventTitle")]
		public string NextEventTitle
		{
			get { return Umbraco.Web.PublishedContentModels.HomeControls.GetNextEventTitle(this); }
		}
	}

	// Mixin content Type 1062 with alias "homeControls"
	/// <summary>Home Controls</summary>
	public partial interface IHomeControls : IPublishedContent
	{
		/// <summary>Address</summary>
		string Address { get; }

		/// <summary>Next Event Time</summary>
		string NextEventTime { get; }

		/// <summary>Next Event Title</summary>
		string NextEventTitle { get; }
	}

	/// <summary>Home Controls</summary>
	[PublishedContentModel("homeControls")]
	public partial class HomeControls : PublishedContentModel, IHomeControls
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "homeControls";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public HomeControls(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<HomeControls, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Address: Enter the address for the meetup
		///</summary>
		[ImplementPropertyType("address")]
		public string Address
		{
			get { return GetAddress(this); }
		}

		/// <summary>Static getter for Address</summary>
		public static string GetAddress(IHomeControls that) { return that.GetPropertyValue<string>("address"); }

		///<summary>
		/// Next Event Time: Enter the time for the next event
		///</summary>
		[ImplementPropertyType("nextEventTime")]
		public string NextEventTime
		{
			get { return GetNextEventTime(this); }
		}

		/// <summary>Static getter for Next Event Time</summary>
		public static string GetNextEventTime(IHomeControls that) { return that.GetPropertyValue<string>("nextEventTime"); }

		///<summary>
		/// Next Event Title: Enter the title for the next event
		///</summary>
		[ImplementPropertyType("nextEventTitle")]
		public string NextEventTitle
		{
			get { return GetNextEventTitle(this); }
		}

		/// <summary>Static getter for Next Event Title</summary>
		public static string GetNextEventTitle(IHomeControls that) { return that.GetPropertyValue<string>("nextEventTitle"); }
	}

	// Mixin content Type 1065 with alias "speakerControls"
	/// <summary>Speaker Controls</summary>
	public partial interface ISpeakerControls : IPublishedContent
	{
		/// <summary>Bio</summary>
		string Bio { get; }

		/// <summary>Image</summary>
		IPublishedContent Image { get; }

		/// <summary>Social Links</summary>
		Umbraco.Web.Models.RelatedLinks SocialLinks { get; }
	}

	/// <summary>Speaker Controls</summary>
	[PublishedContentModel("speakerControls")]
	public partial class SpeakerControls : PublishedContentModel, ISpeakerControls
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "speakerControls";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public SpeakerControls(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<SpeakerControls, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Bio: Enter the bio for the speaker
		///</summary>
		[ImplementPropertyType("bio")]
		public string Bio
		{
			get { return GetBio(this); }
		}

		/// <summary>Static getter for Bio</summary>
		public static string GetBio(ISpeakerControls that) { return that.GetPropertyValue<string>("bio"); }

		///<summary>
		/// Image
		///</summary>
		[ImplementPropertyType("image")]
		public IPublishedContent Image
		{
			get { return GetImage(this); }
		}

		/// <summary>Static getter for Image</summary>
		public static IPublishedContent GetImage(ISpeakerControls that) { return that.GetPropertyValue<IPublishedContent>("image"); }

		///<summary>
		/// Social Links: Enter the social links for the speaker
		///</summary>
		[ImplementPropertyType("socialLinks")]
		public Umbraco.Web.Models.RelatedLinks SocialLinks
		{
			get { return GetSocialLinks(this); }
		}

		/// <summary>Static getter for Social Links</summary>
		public static Umbraco.Web.Models.RelatedLinks GetSocialLinks(ISpeakerControls that) { return that.GetPropertyValue<Umbraco.Web.Models.RelatedLinks>("socialLinks"); }
	}

	/// <summary>Speaker</summary>
	[PublishedContentModel("speaker")]
	public partial class Speaker : PublishedContentModel, ISpeakerControls
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "speaker";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Speaker(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Speaker, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Bio: Enter the bio for the speaker
		///</summary>
		[ImplementPropertyType("bio")]
		public string Bio
		{
			get { return Umbraco.Web.PublishedContentModels.SpeakerControls.GetBio(this); }
		}

		///<summary>
		/// Image
		///</summary>
		[ImplementPropertyType("image")]
		public IPublishedContent Image
		{
			get { return Umbraco.Web.PublishedContentModels.SpeakerControls.GetImage(this); }
		}

		///<summary>
		/// Social Links: Enter the social links for the speaker
		///</summary>
		[ImplementPropertyType("socialLinks")]
		public Umbraco.Web.Models.RelatedLinks SocialLinks
		{
			get { return Umbraco.Web.PublishedContentModels.SpeakerControls.GetSocialLinks(this); }
		}
	}

	// Mixin content Type 1067 with alias "eventControls"
	/// <summary>Event Controls</summary>
	public partial interface IEventControls : IPublishedContent
	{
		/// <summary>End Date Time</summary>
		DateTime EndDateTime { get; }

		/// <summary>Meeting Content</summary>
		IHtmlString MeetingContent { get; }

		/// <summary>Meetup Url</summary>
		string MeetupUrl { get; }

		/// <summary>Start Date Time</summary>
		DateTime StartDateTime { get; }
	}

	/// <summary>Event Controls</summary>
	[PublishedContentModel("eventControls")]
	public partial class EventControls : PublishedContentModel, IEventControls
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "eventControls";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public EventControls(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<EventControls, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// End Date Time: Enter the end date time
		///</summary>
		[ImplementPropertyType("endDateTime")]
		public DateTime EndDateTime
		{
			get { return GetEndDateTime(this); }
		}

		/// <summary>Static getter for End Date Time</summary>
		public static DateTime GetEndDateTime(IEventControls that) { return that.GetPropertyValue<DateTime>("endDateTime"); }

		///<summary>
		/// Meeting Content: Enter the content for the meeting
		///</summary>
		[ImplementPropertyType("meetingContent")]
		public IHtmlString MeetingContent
		{
			get { return GetMeetingContent(this); }
		}

		/// <summary>Static getter for Meeting Content</summary>
		public static IHtmlString GetMeetingContent(IEventControls that) { return that.GetPropertyValue<IHtmlString>("meetingContent"); }

		///<summary>
		/// Meetup Url: Enter the url for the event on meetup
		///</summary>
		[ImplementPropertyType("meetupUrl")]
		public string MeetupUrl
		{
			get { return GetMeetupUrl(this); }
		}

		/// <summary>Static getter for Meetup Url</summary>
		public static string GetMeetupUrl(IEventControls that) { return that.GetPropertyValue<string>("meetupUrl"); }

		///<summary>
		/// Start Date Time: Enter the start date and time
		///</summary>
		[ImplementPropertyType("startDateTime")]
		public DateTime StartDateTime
		{
			get { return GetStartDateTime(this); }
		}

		/// <summary>Static getter for Start Date Time</summary>
		public static DateTime GetStartDateTime(IEventControls that) { return that.GetPropertyValue<DateTime>("startDateTime"); }
	}

	/// <summary>Event</summary>
	[PublishedContentModel("event")]
	public partial class Event : PublishedContentModel, IEventControls
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "event";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Event(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Event, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// End Date Time: Enter the end date time
		///</summary>
		[ImplementPropertyType("endDateTime")]
		public DateTime EndDateTime
		{
			get { return Umbraco.Web.PublishedContentModels.EventControls.GetEndDateTime(this); }
		}

		///<summary>
		/// Meeting Content: Enter the content for the meeting
		///</summary>
		[ImplementPropertyType("meetingContent")]
		public IHtmlString MeetingContent
		{
			get { return Umbraco.Web.PublishedContentModels.EventControls.GetMeetingContent(this); }
		}

		///<summary>
		/// Meetup Url: Enter the url for the event on meetup
		///</summary>
		[ImplementPropertyType("meetupUrl")]
		public string MeetupUrl
		{
			get { return Umbraco.Web.PublishedContentModels.EventControls.GetMeetupUrl(this); }
		}

		///<summary>
		/// Start Date Time: Enter the start date and time
		///</summary>
		[ImplementPropertyType("startDateTime")]
		public DateTime StartDateTime
		{
			get { return Umbraco.Web.PublishedContentModels.EventControls.GetStartDateTime(this); }
		}
	}

	/// <summary>Sponsor Item</summary>
	[PublishedContentModel("sponsorItem")]
	public partial class SponsorItem : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "sponsorItem";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public SponsorItem(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<SponsorItem, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Image: Choose the image for this sponsor
		///</summary>
		[ImplementPropertyType("image")]
		public IPublishedContent Image
		{
			get { return this.GetPropertyValue<IPublishedContent>("image"); }
		}

		///<summary>
		/// Sponsor Name: Enter the name of the sponsor
		///</summary>
		[ImplementPropertyType("sponsorName")]
		public string SponsorName
		{
			get { return this.GetPropertyValue<string>("sponsorName"); }
		}

		///<summary>
		/// Sponsor Url: Enter the url for the sponsor
		///</summary>
		[ImplementPropertyType("sponsorUrl")]
		public string SponsorUrl
		{
			get { return this.GetPropertyValue<string>("sponsorUrl"); }
		}
	}

	/// <summary>Speaker List</summary>
	[PublishedContentModel("speakerList")]
	public partial class SpeakerList : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "speakerList";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public SpeakerList(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<SpeakerList, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}
	}

	/// <summary>Event List</summary>
	[PublishedContentModel("eventList")]
	public partial class EventList : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "eventList";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public EventList(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<EventList, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}
	}

	/// <summary>Folder</summary>
	[PublishedContentModel("Folder")]
	public partial class Folder : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "Folder";
		public new const PublishedItemType ModelItemType = PublishedItemType.Media;
#pragma warning restore 0109

		public Folder(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Folder, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Contents:
		///</summary>
		[ImplementPropertyType("contents")]
		public object Contents
		{
			get { return this.GetPropertyValue("contents"); }
		}
	}

	/// <summary>Image</summary>
	[PublishedContentModel("Image")]
	public partial class Image : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "Image";
		public new const PublishedItemType ModelItemType = PublishedItemType.Media;
#pragma warning restore 0109

		public Image(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Image, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Size
		///</summary>
		[ImplementPropertyType("umbracoBytes")]
		public string UmbracoBytes
		{
			get { return this.GetPropertyValue<string>("umbracoBytes"); }
		}

		///<summary>
		/// Type
		///</summary>
		[ImplementPropertyType("umbracoExtension")]
		public string UmbracoExtension
		{
			get { return this.GetPropertyValue<string>("umbracoExtension"); }
		}

		///<summary>
		/// Upload image
		///</summary>
		[ImplementPropertyType("umbracoFile")]
		public Umbraco.Web.Models.ImageCropDataSet UmbracoFile
		{
			get { return this.GetPropertyValue<Umbraco.Web.Models.ImageCropDataSet>("umbracoFile"); }
		}

		///<summary>
		/// Height
		///</summary>
		[ImplementPropertyType("umbracoHeight")]
		public string UmbracoHeight
		{
			get { return this.GetPropertyValue<string>("umbracoHeight"); }
		}

		///<summary>
		/// Width
		///</summary>
		[ImplementPropertyType("umbracoWidth")]
		public string UmbracoWidth
		{
			get { return this.GetPropertyValue<string>("umbracoWidth"); }
		}
	}

	/// <summary>File</summary>
	[PublishedContentModel("File")]
	public partial class File : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "File";
		public new const PublishedItemType ModelItemType = PublishedItemType.Media;
#pragma warning restore 0109

		public File(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<File, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Size
		///</summary>
		[ImplementPropertyType("umbracoBytes")]
		public string UmbracoBytes
		{
			get { return this.GetPropertyValue<string>("umbracoBytes"); }
		}

		///<summary>
		/// Type
		///</summary>
		[ImplementPropertyType("umbracoExtension")]
		public string UmbracoExtension
		{
			get { return this.GetPropertyValue<string>("umbracoExtension"); }
		}

		///<summary>
		/// Upload file
		///</summary>
		[ImplementPropertyType("umbracoFile")]
		public string UmbracoFile
		{
			get { return this.GetPropertyValue<string>("umbracoFile"); }
		}
	}

	/// <summary>Member</summary>
	[PublishedContentModel("Member")]
	public partial class Member : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "Member";
		public new const PublishedItemType ModelItemType = PublishedItemType.Member;
#pragma warning restore 0109

		public Member(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Member, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Is Approved
		///</summary>
		[ImplementPropertyType("umbracoMemberApproved")]
		public bool UmbracoMemberApproved
		{
			get { return this.GetPropertyValue<bool>("umbracoMemberApproved"); }
		}

		///<summary>
		/// Comments
		///</summary>
		[ImplementPropertyType("umbracoMemberComments")]
		public string UmbracoMemberComments
		{
			get { return this.GetPropertyValue<string>("umbracoMemberComments"); }
		}

		///<summary>
		/// Failed Password Attempts
		///</summary>
		[ImplementPropertyType("umbracoMemberFailedPasswordAttempts")]
		public string UmbracoMemberFailedPasswordAttempts
		{
			get { return this.GetPropertyValue<string>("umbracoMemberFailedPasswordAttempts"); }
		}

		///<summary>
		/// Last Lockout Date
		///</summary>
		[ImplementPropertyType("umbracoMemberLastLockoutDate")]
		public string UmbracoMemberLastLockoutDate
		{
			get { return this.GetPropertyValue<string>("umbracoMemberLastLockoutDate"); }
		}

		///<summary>
		/// Last Login Date
		///</summary>
		[ImplementPropertyType("umbracoMemberLastLogin")]
		public string UmbracoMemberLastLogin
		{
			get { return this.GetPropertyValue<string>("umbracoMemberLastLogin"); }
		}

		///<summary>
		/// Last Password Change Date
		///</summary>
		[ImplementPropertyType("umbracoMemberLastPasswordChangeDate")]
		public string UmbracoMemberLastPasswordChangeDate
		{
			get { return this.GetPropertyValue<string>("umbracoMemberLastPasswordChangeDate"); }
		}

		///<summary>
		/// Is Locked Out
		///</summary>
		[ImplementPropertyType("umbracoMemberLockedOut")]
		public bool UmbracoMemberLockedOut
		{
			get { return this.GetPropertyValue<bool>("umbracoMemberLockedOut"); }
		}

		///<summary>
		/// Password Answer
		///</summary>
		[ImplementPropertyType("umbracoMemberPasswordRetrievalAnswer")]
		public string UmbracoMemberPasswordRetrievalAnswer
		{
			get { return this.GetPropertyValue<string>("umbracoMemberPasswordRetrievalAnswer"); }
		}

		///<summary>
		/// Password Question
		///</summary>
		[ImplementPropertyType("umbracoMemberPasswordRetrievalQuestion")]
		public string UmbracoMemberPasswordRetrievalQuestion
		{
			get { return this.GetPropertyValue<string>("umbracoMemberPasswordRetrievalQuestion"); }
		}
	}

}



// EOF
